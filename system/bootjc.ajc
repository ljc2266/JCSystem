BOTPAK	等	0x00280000
DSKCAC	等	0x00100000
DSKCAC0	等	0x00008000
启动区	等	0x0ff0
键盘灯	等	0x0ff1
模式	等	0x0ff2
宽		等	0x0ff4
高		等	0x0ff6
缓冲区	等	0x0ff8
	装载	0xc200
	移		寄加低,0x13
	移		寄加高,0x00
	中断	0x10	
	移		转字	[模式],8
	移		转双字	[宽],320
	移		转双字	[高],200
	移		转四字	[缓冲区],0x000a0000
	移		寄加高,0x02
	中断	0x16
	移		[键盘灯],寄加低

	移		寄加低,0xff
	出		0x21,寄加低
	空
	出		0xa1,寄加低
	禁中断

	调		waitkbdout
	移		寄加低,0xd1
	出		0x64,寄加低
	调		waitkbdout
	移		寄加低,0xdf
	出		0x60,寄加低
	调		waitkbdout

	全描	[GDTR0]
	移		高寄加,寄控0
	和		高寄加,0x7fffffff
	或		高寄加,0x00000001
	移		寄控0,高寄加
	跳		pipelineflush
pipelineflush:
	移		寄加,8
	移		段数,寄加
	移		段附,寄加
	移		段附f,寄加
	移		段附g,寄加
	移		段堆,寄加

	移		高变源,bootpack
	移		高变目,BOTPAK
	移		高寄计,512*1024/4
	调		memcpy

	移		高变源,0x7c00
	移		高变目,DSKCAC
	移		高寄计,512/4
	调		memcpy

	移		高变源,DSKCAC0+512
	移		高变目,DSKCAC+512
	移		高寄计,0
	移		寄计低,转字	[启动区]
	符乘	高寄计,512*18*2/4
	减		高寄计,512/4
	调		memcpy

	移		高寄基,BOTPAK
	移		高寄计,[高寄基+16]
	加		高寄计,3
	逻右移	高寄计,2
	零跳	skip
	移		高变源,[高寄基+20]
	加		高变源,高寄基
	移		高变目,[高寄基+12]
	调		memcpy
skip:
	移		高栈指,[高寄基+12]
	跳		转四字	2*8:0x0000001b
waitkbdout:
	入		寄加低,0x64
	和		寄加低,0x02
	非零跳	waitkbdout
	返
memcpy:
	移		高寄加,[高变源]
	加		高变源,4
	移		[高变目],高寄加
	加		高变目,4
	减		高寄计,1
	非零跳	memcpy
	返
	section	align=16
GDT0:
	补字	8
	双字	0xffff,0x0000,0x9200,0x00cf
	双字	0xffff,0x0000,0x9a28,0x0047
	双字	0
GDTR0:
	双字	8*3-1
	四字	GDT0
	section	align=16
bootpack: